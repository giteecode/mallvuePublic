<?xml version="1.0" encoding="utf-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.qiu.dao.ReturnGoodsDao">
    <!--通过ID查询-->
    <select id="selectById" resultType="ReturnGoods" parameterType="Integer">
        select return_id,
               apply_time,
               user_number,
               user_name,
               return_price,
               return_state,
               deal_time,
               order_no,
               operator_number,
               operator_name,
               return_reason
        from return_goods
        where return_id = #{returnId};
    </select>

    <!--查询所有-->
    <select id="selectAll" resultType="ReturnGoods">
        select return_id,
               apply_time,
               user_number,
               user_name,
               return_price,
               return_state,
               deal_time,
               order_no,
               operator_number,
               operator_name,
               return_reason
        from return_goods
        order by apply_time desc;
    </select>

    <!--通过买家帐号查询数据-->
    <select id="selectAllByUser" resultType="ReturnGoods">
        select return_id,
               apply_time,
               user_number,
               user_name,
               return_price,
               return_state,
               deal_time,
               order_no,
               operator_number,
               operator_name,
               return_reason
        from return_goods
        where user_number = #{userNumber};
    </select>

    <!--查询全部订单基本信息-->
    <select id="selectAllOrder" resultType="java.util.Map" parameterType="String">
        select order_id       as orderId,
               a.order_no     as orderNo,
               b.product_no   as productNo,
               product_specs  as productSpecs,
               pay_price      as payPrice,
               deal_time      as orderTime,
               pay_type       as payType,
               c.return_state as orderState,
               c.return_id    as returnId,
               product_name   as productName,
               product_type   as productType,
               out_price      as outPrice,
               pay_amount     as payAmount,
               a.user_name    as userName,
               contact_way    as contactWay,
               accept_address as acceptAddress,
               product_url    as productUrl
        from `order` as a,
             product as b,
             return_goods as c
        where (a.product_no = b.product_no)
          and (a.order_no = c.order_no)
          and c.user_number = #{userNumber}
          and c.return_state != '已拒绝'
          and c.return_state != '退款完成'
          and c.return_state != '拒绝退款'
          and c.return_state != '待处理'
          and c.return_state != '待退款'
        order by deal_time desc
    </select>

    <!--根据订单编号查询-->
    <select id="selectOrderNo" resultType="java.util.Map" parameterType="String">
        select a.order_no     as orderNo,
               user_number    as userAccount,
               a.user_name    as userName,
               pay_type       as payType,
               order_from     as orderFrom,
               product_no     as productNo,
               pay_amount     as payAmount,
               pay_price      as payPrice,
               order_time     as orderTime,
               a.return_state as orderState
        from return_goods as a,
             `order` as b
        where a.order_no = b.order_no
          and a.order_no = #{orderNo};
    </select>

    <!--查询记录个数-->
    <select id="selectCount" resultType="java.lang.Integer">
        select count(*)
        from return_goods
    </select>

    <!--查询未退款的订单-->
    <select id="returnGoodsOverview" resultType="java.util.Map">
        SELECT COUNT(IF(return_state = '待收货', 1, NULL)) AS noRefundCount
        FROM `return_goods`;
    </select>

    <!--插入一条数据-->
    <insert id="insertData" parameterType="ReturnGoods">
        insert into return_goods (return_id, apply_time, user_number, user_name, return_price, return_state, deal_time,
                                  order_no, operator_number, operator_name, return_reason)
        values (#{returnId}, #{applyTime}, #{userNumber}, #{userName}, #{returnPrice}, #{returnState}, #{dealTime},
                #{orderNo}, #{operatorNumber}, #{operatorName}, #{returnReason});
    </insert>

    <!--通过ID更新-->
    <update id="updateById" parameterType="ReturnGoods">
        update return_goods
        <set>
            <if test="dealTime != null">
                deal_time = #{dealTime},
            </if>
            <if test="operatorName != null">
                operator_name = #{operatorName},
            </if>
            <if test="operatorNumber != null">
                operator_number = #{operatorNumber},
            </if>
            <if test="returnState != null">
                return_state = #{returnState},
            </if>
        </set>
        where return_id=#{returnId};
    </update>

    <!--通过ID删除-->
    <delete id="deleteById" parameterType="Integer">
        delete
        from return_goods
        where return_id = #{returnId};;
    </delete>
</mapper>
<?xml version="1.0" encoding="utf-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.qiu.dao.OrderDao">
    <!--通过ID查询-->
    <select id="selectById" resultType="Order" parameterType="int">
        select order_id,
               order_no,
               order_time,
               product_no,
               product_specs,
               user_account,
               user_name,
               contact_way,
               pay_price,
               pay_amount,
               pay_type,
               order_from,
               order_state,
               accept_address,
               return_state
        from `order`
        where order_id = #{orderId};
    </select>

    <!--查询所有-->
    <select id="selectAll" resultType="Order">
        select order_id,
               order_no,
               order_time,
               product_no,
               product_specs,
               user_account,
               user_name,
               contact_way,
               pay_price,
               pay_amount,
               pay_type,
               order_from,
               order_state,
               accept_address,
               return_state
        from `order`
        where !return_state
        order by order_time desc;
    </select>

    <!--通过orderNo查询-->
    <select id="selectByKey" resultType="Order" parameterType="String">
        select order_id,
               order_no,
               order_time,
               product_no,
               product_specs,
               user_account,
               user_name,
               contact_way,
               pay_price,
               pay_amount,
               pay_type,
               order_from,
               order_state,
               accept_address,
               return_state
        from `order`
        where order_no = #{orderNo}
    </select>

    <!--通过orderNo查Id-->
    <select id="selectIdByKey" resultType="java.lang.Integer" parameterType="String">
        select order_id
        from `order`
        where order_no = #{key}
    </select>

    <!--查询记录个数-->
    <select id="selectCount" resultType="java.lang.Integer">
        select count(*)
        from `order`
        where !return_state
    </select>

    <!--查询全部订单基本信息-->
    <select id="selectAllOrder" resultType="java.util.Map" parameterType="String">
        select order_id       as orderId,
               order_no       as orderNo,
               b.product_no   as productNo,
               product_specs  as productSpecs,
               pay_price      as payPrice,
               order_time     as orderTime,
               pay_type       as payType,
               order_state    as orderState,
               product_name   as productName,
               product_type   as productType,
               out_price      as outPrice,
               pay_amount     as payAmount,
               user_name      as userName,
               contact_way    as contactWay,
               accept_address as acceptAddress,
               product_url    as productUrl
        from `order` as a,
             product as b
        where (a.product_no = b.product_no)
          and user_account = #{userAccount}
          and !return_state
        order by order_time desc
    </select>

    <!--查询订单基本信息-->
    <select id="selectOrder" resultType="java.util.Map" parameterType="String">
        select order_id       as orderId,
               order_no       as orderNo,
               b.product_no   as productNo,
               product_specs  as productSpecs,
               pay_price      as payPrice,
               pay_type       as payType,
               product_name   as productName,
               product_type   as productType,
               out_price      as outPrice,
               pay_amount     as payAmount,
               user_name      as userName,
               contact_way    as contactWay,
               accept_address as acceptAddress,
               product_url    as productUrl
        from `order` as a,
             product as b
        where (a.product_no = b.product_no)
          and order_no = #{orderNo}
    </select>

    <!--查询今日订单数量、今日销售总额、昨日销售总额等信息-->
    <select id="orderOverview" resultType="java.util.Map">
        SELECT COUNT(IF(to_days(order_time) = to_days(now()) and order_state != '待付款', 1, NULL)) AS todayOrderCount,
               IFNULL(SUM(IF(to_days(order_time) = to_days(now()) and order_state != '待付款' and order_state != '已退货',
                             pay_price, 0)), 0)                                                  AS todayOrderMoney,
               IFNULL(SUM(IF(TO_DAYS(NOW()) - TO_DAYS(order_time) = 1 and order_state != '待付款' and order_state != '已退货',
                             pay_price, 0)), 0)                                                  AS yesterdayOrderMoney,
               COUNT(*)                                                                          AS orderCount,
               COUNT(IF(order_state = '开通成功', 1, NULL))                                          AS VIPCount,
               COUNT(IF(order_state = '待付款', 1, NULL))                                           AS noPayCount,
               COUNT(IF(order_state = '待发货', 1, NULL))                                           AS noSendGoodsCount,
               COUNT(IF(order_state = '已发货', 1, NULL))                                           AS sendGoodsCount,
               COUNT(IF(order_state = '已完成', 1, NULL))                                           AS finishOrderCount,
               COUNT(IF(order_state = '待处理', 1, NULL))                                           AS noDealCount,
               COUNT(IF(order_state = '已拒绝', 1, NULL))                                           AS refusalCount
        FROM `order`;
    </select>

    <!--获取订单图表分析数据-->
    <select id="selectChartDate" resultType="java.util.Map" parameterType="String">
        SELECT DATE_FORMAT(order_time, '%Y-%m-%d') AS `date`,
               COUNT(order_id)                     AS orderCount,
               SUM(pay_price)                      AS orderAmount
        FROM `order`
        WHERE DATE(order_time) &gt;= DATE(#{startTime})
          AND DATE(order_time) &lt;= DATE(#{endTime})
          AND order_state != '待付款'
        GROUP BY `date`;
    </select>

    <!--获取订单商品类别图表分析数据-->
    <select id="selectProductTypeChart" resultType="java.util.Map" parameterType="String">
        SELECT COUNT(order_id) AS productCount, product_type as productType
        FROM `order`,
             product
        WHERE `order`.product_no = product.product_no
          AND DATE(order_time) &gt;= DATE(#{startTime})
          AND DATE(order_time) &lt;= DATE(#{endTime})
          AND order_state != '待付款'
        GROUP BY product_type;
    </select>

    <!--获取某个时间段，订单总数和销售总额-->
    <select id="selectCountAndAmount" resultType="java.util.Map" parameterType="String">
        SELECT COUNT(order_id) AS orderCount, IFNULL(SUM(pay_price), 0) AS orderAmount
        FROM `order`
        WHERE DATE(order_time) &gt;= DATE(#{startTime})
          AND DATE(order_time) &lt;= DATE(#{endTime})
          AND order_state != '待付款';
    </select>

    <!--插入一条数据-->
    <insert id="insertData" parameterType="Order">
        insert into `order` (order_id, order_no, order_time, product_no, product_specs, user_account, user_name,
                             contact_way, pay_price, pay_amount,
                             pay_type, order_from, order_state, accept_address, return_state)
        values (#{orderId}, #{orderNo}, #{orderTime}, #{productNo}, #{productSpecs}, #{userAccount},
                #{userName}, #{contactWay}, #{payPrice}, #{payAmount}, #{payType}, #{orderFrom}, #{orderState},
                #{acceptAddress}, #{returnState});
    </insert>

    <!--通过ID更新-->
    <update id="updateById" parameterType="Order">
        update `order`
        <set>
            <if test="orderState != null">
                order_state = #{orderState},
            </if>
            <if test="acceptAddress != null">
                accept_address = #{acceptAddress},
            </if>
            <if test="contactWay != null">
                contact_way = #{contactWay},
            </if>
            <if test="returnState != null">
                return_state = #{returnState},
            </if>
        </set>
        where order_id = #{orderId};
    </update>

    <!--通过ID删除-->
    <delete id="deleteById" parameterType="int">
        delete
        from `order`
        where order_id = #{orderId};
    </delete>
</mapper>